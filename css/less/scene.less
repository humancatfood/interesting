@import "reusables";


html, body {
    height: 100%;
    background-color: darkgray;
    font-size: 20px;
}


.anim() {
    50% {
        .transform(rotate(180deg));
    }
    100% {
        .transform(rotate(360deg));
    }
}
@-webkit-keyframes anim { .anim(); }
   @-moz-keyframes anim { .anim(); }
        @keyframes anim { .anim(); }


@cog-size: 10rem;
@num-cogs: 26;
@cog-ratio: 1 / 5;

@max-rotation: 10s;
@flip-at: 4;


@cog-radius-offset: (@cog-size / 2 + @cog-size * @cog-ratio / 2);
@cog-axis-offset: sqrt(@cog-radius-offset * @cog-radius-offset / 2);

@cog-base-offset: -(@cog-size + @cog-axis-offset * @flip-at) / 2;

.vertically-centered()
{
    position: absolute;
    top: 50%;
    .transform(translateY(-50%));
}
.cog-leftness (@i) when ( mod( floor(@i / @flip-at), 2) = 0) {
    left: @cog-base-offset + mod(@i, @flip-at) * @cog-axis-offset;
}
.cog-leftness (@i) when ( mod( floor(@i / @flip-at), 2) = 1) {
    left: @cog-base-offset + (@flip-at - mod(@i, @flip-at)) * @cog-axis-offset;
}

    margin-right: @margin-right;

    &:after {
        content: '\2192';
        .vertically-centered();
        right: @cog-size * -0.2;
    }
}
.p-right (@margin-left) {

    margin-left: @margin-left;

    &:before {
        content: '\2190';
        .vertically-centered();
        left: @cog-size * -0.2;
    }
}

main {
    position: relative;
    width: 44rem;

    margin: 0 auto;
    background-color: lightgray;


    .cogs {
        width: 0;
        height: @cog-size + @cog-axis-offset * (@num-cogs - 1);
        min-height: 100%;
        margin: 0 auto;
        position: relative;

        }

    }

    .cog {
        position: absolute;
        width: @cog-size;
        height: @cog-size;

        &:nth-of-type(2n)
        {
            .animation-direction(reverse);
        }

        .animation(anim 10s linear infinite);

        .cog-loop (@i) when (@i =< @num-cogs) {
            &:nth-of-type(@{i}) {
                top: @cog-axis-offset * (@i - 1);
                .cog-leftness(@i - 1);
                .animation-duration(@max-rotation * pow(1 / @cog-ratio, @i - 1));
            }
            .cog-loop(@i + 1);
        }
        .cog-loop(1);
    }

}

@media (max-width: 1024px) {
    html {
        font-size: 20px;
    }
}
@media (max-width: 768px) {
    html {
        font-size: 17px;
    }
}
@media (max-width: 640px) {
    html {
        font-size: 14px;
    }
}
@media (max-width: 480px) {
    html {
        font-size: 11px;
    }
}
@media (max-width: 320px) {
    html {
        font-size: 8px;
    }
}

